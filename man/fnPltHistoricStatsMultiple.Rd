% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fnPltHistoricStatsMultiple.R
\name{fnPltHistoricStatsMultiple}
\alias{fnPltHistoricStatsMultiple}
\title{Plot multiple historic stats for multiple datasets}
\usage{
fnPltHistoricStatsMultiple(
  data = NULL,
  listOfStats = NULL,
  savePlot = NULL,
  plotsFolder = NULL
)
}
\arguments{
\item{data}{A dataframe OR vector of dataframes. For plotting multiple stats on a single dataframe of data, provide only a single dataframe (data = df1). For plotting multiple stats on multiple dataframes of data, provide a list of dataframes (plotData = list(df1, df2, df3), names(plotData = c("Data1", "Data2", "Data3"), data = plotData)). NOTE - when providing a list of dataframes, each dataframe must be names in the list (see example). The name of each df in the list will be appended to file names. In each provided dataframe (whether individual or in a list) there must be a unique column with the same name as each of the variables to plot (provided in 'listOfStats'). The chosen statistics will be plotted for each provided dataset}

\item{listOfStats}{A vector of the statistics to plot for each of the datasets in 'data'}

\item{savePlot}{(Optional - if not set, plots are saved by default) A boolean (TRUE/FALSE, default TRUE) determines whether the plot will be saved. Useful for controlling overall save behaviour.}

\item{plotsFolder}{(Optional - if not set, no plots are saved but they are still created and returned) The root folder where images should be saved. Individual saved images are given unique names within that folder as part of this function}
}
\value{
A list of plots is returned. The list contains all the plots generated. Separately, if requested, the generated plots are also saved to a specified folder.
}
\description{
Plot multiple historic stats for multiple datasets
}
\examples{
data1 <- list(statsAll, statsStagesA, statsStagesB)
names(.data1) <- c("All", "StagesA", "StagesB")
stats <- c("Mean", "Correct", "Incorrect", "DontKnow", "Phi")

pltList <- list()
pltList <- append(pltList,
  fnPltHistoricStatsMultiple(
      data = data1,
      listOfStats = stats,
      savePlot = !any(lFiles$stopAllOutputs, lFiles$stopImageSaving),
      plotsFolder = lFiles$pathImages)
      )

pltList2 <- list()
pltList2 <- append(pltList2,
  fnPltHistoricStatsMultiple(
      data = dfData,
      listOfStats = stats,
      savePlot = !any(lFiles$stopAllOutputs, lFiles$stopImageSaving),
      plotsFolder = lFiles$pathImages)
      )


}

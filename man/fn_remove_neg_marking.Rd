% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn_remove_neg_marking.R
\name{fn_remove_neg_marking}
\alias{fn_remove_neg_marking}
\title{Remove negative marking}
\usage{
fn_remove_neg_marking(scores_data = NULL, mark_old = -0.25, mark_new = 0)
}
\arguments{
\item{scores_data}{A single dataframe containing scores to be replaced. More columns may be present in the dataframe, but in all instances (including extra columns) all occurences of 'mark_old' cells are replaced with 'mark_new' cells}

\item{mark_old}{(OPTIONAL) Defaults to '-0.25'. The cell value to be replaced (by the value of 'mark_new')}

\item{mark_new}{(OPTIONAL) Defaults to '0'. The cell value to go in the place of the cell value to replace ('mark_old')}
}
\value{
The scores_data dataframe is returned with all the 'mark_old' cells replaced with 'mark_new'
}
\description{
Input a dataframe of scores where negative marking is to be removed. By default, all cells that are -0.25 are replaced with 0. Thought the exact replacement can be configured by defining the 'mark_old' and 'mark_new' optional variables.
}
\examples{
test <- fn_remove_neg_marking(scores_data = data.frame(c(1,1,-0.25), c(-0.25, 0, -0.25)))


}

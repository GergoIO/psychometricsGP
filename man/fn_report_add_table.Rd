% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn_report_add_table.R
\name{fn_report_add_table}
\alias{fn_report_add_table}
\title{Add a Table with Accompanying Caption to Officer Report}
\usage{
fn_report_add_table(
  report = NULL,
  table = NULL,
  table_count = NULL,
  caption = NULL,
  stop_trailing_line = FALSE,
  stop_flextable_conversion = FALSE,
  vertical_lines = NULL,
  horizontal_lines = NULL,
  ...
)
}
\arguments{
\item{report}{The Officer report object.}

\item{table}{The table to be added. Can be a `data.frame` or a `flextable`.}

\item{table_count}{Integer variable storing the current table number (e.g., usually named `table_count`).}

\item{caption}{String, the caption to add above the table.}

\item{stop_trailing_line}{Logical. If `TRUE`, no empty line is added after the table. Defaults to `FALSE`.}

\item{stop_flextable_conversion}{Logical. If `TRUE`, the table is assumed to be a flextable and will not be converted. Defaults to `FALSE`.}

\item{vertical_lines}{Numeric vector specifying the columns where vertical lines should be added. Defaults to `NULL`.}

\item{horizontal_lines}{Numeric vector specifying the rows where horizontal lines should be added. Defaults to `NULL`.}

\item{...}{Additional arguments passed to `officer::body_add_flextable()`, such as text alignment.}
}
\value{
The updated Officer report object with the added table and caption. The `table_count` variable is incremented by 1 in the calling environment.
}
\description{
Adds a `flextable` (with autofit layout by default) to an Officer report, along with a caption placed above the table.
Supports adding vertical and horizontal lines to specific columns and rows for enhanced formatting.
}
\examples{
library(officer)
library(flextable)

# Create example data frame
test_df <- data.frame(
  col1 = c("A", "B", "C", "D"),
  col2 = c(10, 20, 30, 40),
  col3 = c(TRUE, FALSE, TRUE, FALSE)
)

# Initialise Officer report
my_report <- read_docx()

# Initialise table count
table_count <- 1

# Add table to report
my_report <- fn_report_add_table(
  report = my_report,
  table = test_df,
  table_count = table_count,
  caption = "Example Table",
  vertical_lines = c(2),
  horizontal_lines = c(2),
  stop_trailing_line = FALSE
)

# Add a second table and see count increase
second_df <- data.frame(
  name = c("X", "Y", "Z"),
  value = c(3, 4, 5)
)
my_report <- fn_report_add_table(
  report = my_report,
  table = second_df,
  table_count = table_count,
  caption = "Second Table Example",
  stop_trailing_line = TRUE
)
}

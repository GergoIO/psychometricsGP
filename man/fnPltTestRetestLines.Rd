% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fnPltTestRetestLines.R
\name{fnPltTestRetestLines}
\alias{fnPltTestRetestLines}
\title{Add Grade Boundary Lines to Test Retest Plots}
\usage{
fnPltTestRetestLines(
  plot = NULL,
  stage = NULL,
  testInYear = NULL,
  gradeBounds = NULL,
  gradeBoundsPrev = NULL,
  nBounds = NULL,
  nBoundsPrev = NULL
)
}
\arguments{
\item{plot}{A plot - a scatterplot of the stage specific test retest data}

\item{stage}{Numeric (integer) - the current stage being plotted}

\item{testInYear}{Numeric (integer) - the test in the academic year of this assessment. 1 for the first assessment}

\item{gradeBounds}{A dataframe of the grade boundaries for the current assessment. Cols should be named "Stage 1" etc. Rows should be named "Unsatisfactory", "Borderline", "Satisfactory", "Excellent"}

\item{gradeBoundsPrev}{A dataframe of the grade boundaries for the previous assessment. Cols should be named "Stage 1" etc. Rows should be named "Unsatisfactory", "Borderline", "Satisfactory", "Excellent"}

\item{nBounds}{The number of grade boundaries to add for the current assessment (3 means plot the B, S and E boundaries, 1 means plot only the S boundary)}

\item{nBoundsPrev}{The number of grade boundaries to add for the previous assessment}
}
\value{
An updated plot is returned. The new plot should be saved under the old plot (see examples)
}
\description{
Add Grade Boundary Lines to Test Retest Plots
}
\examples{
plt[[glue('testRetestStage{i}')]] <- fnPltTestRetestLines(plot = plt[[glue('testRetestStage{i}')]], stage = i, testInYear = cnst$testInYear, gradeBounds = tab$gradeBoundaries, gradeBoundsPrev = tab$gradeBoundariesPrev, nBounds = 3, nBoundsPrev = 3)


}

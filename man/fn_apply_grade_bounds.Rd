% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn_apply_grade_bounds.R
\name{fn_apply_grade_bounds}
\alias{fn_apply_grade_bounds}
\title{Apply Grade Boundaries and Assign Grades by Stage (No Global Lookups)}
\usage{
fn_apply_grade_bounds(
  data,
  n_grade_bounds_per_stage,
  grade_bounds,
  grade_bounds_type,
  configured_stages,
  max_raw_score,
  grade_labels,
  grade_bound_suffixes,
  grading_method_name,
  grading_method_name_abbreviated = NULL,
  negative_marking_penalty = -0.25,
  stage_col = "StageCurrent",
  score_pct_col = "ScorePct",
  formative_label = "Formative"
)
}
\arguments{
\item{data}{A data frame with at least two columns: one for stage IDs, one for percentage scores.}

\item{n_grade_bounds_per_stage}{Integer scalar: number of grade boundaries for each stage.}

\item{grade_bounds}{A concatenated vector of grade boundaries for all configured stages.
Must have length \code{n_grade_bounds_per_stage * length(configured_stages)}.
Formative stages are indicated by all boundaries equalling \code{formative_label}.}

\item{grade_bounds_type}{Character scalar; must be one of \dQuote{Percentage Score} or \dQuote{Raw Score}.}

\item{configured_stages}{Numeric or factor vector of stage IDs to be graded (authoritative list).
Only these stages are assigned grades. Rows with other stages will have blank grades.}

\item{max_raw_score}{Numeric scalar representing the maximum raw score achievable.}

\item{grade_labels}{Character vector with length \code{n_grade_bounds_per_stage + 1}, ordered grade labels.}

\item{grade_bound_suffixes}{Character vector with length \code{n_grade_bounds_per_stage} used for naming boundary columns.}

\item{grading_method_name}{Character scalar used as part of new column names.}

\item{grading_method_name_abbreviated}{Character scalar (optional) abbreviated string used for column names.
Defaults to \code{grading_method_name} if \code{NULL}.}

\item{negative_marking_penalty}{Numeric scalar penalty applied to negative marking; default is -0.25.}

\item{stage_col}{Character scalar naming the column in \code{data} that contains stage IDs. Default: \dQuote{StageCurrent}.}

\item{score_pct_col}{Character scalar naming the column in \code{data} that contains percentage scores. Default: \dQuote{ScorePct}.}

\item{formative_label}{Character scalar designating formative-only grade bounds. Default: \dQuote{Formative}.}
}
\value{
Modified \code{data} with new columns for grade boundaries and assigned grades.
  Boundary columns are named \code{GradeBoundPct_<abbrev>_<suffix>} and \code{GradeBoundRaw_<abbrev>_<suffix>}.
  The grade column is named \code{Grade_<abbrev>}, where \code{<abbrev>} is \code{grading_method_name_abbreviated} if provided or \code{grading_method_name}.

  Rows with stages *not* in \code{configured_stages} will have blank grades and NA boundaries.
}
\description{
Assign grades to assessment results using explicit, user-supplied grade boundaries,
grade bounds type, stage mapping, and other parameters.
No lookups are performed in external/global objects â€” all configuration must be
provided during the call.
}
\details{
The input \code{data} must contain columns representing the current stage and the
percentage score, named as specified by \code{stage_col} (default: "StageCurrent") and
\code{score_pct_col} (default: "ScorePct").

Grade boundaries can be expressed either as raw scores or as percentage scores; these
are converted as needed based on \code{grade_bounds_type} which must be either
\dQuote{Percentage Score} or \dQuote{Raw Score}.

Negative marking penalties affect the minimum allowed raw score boundary floors.
Formative stages can be identified by setting all grade bounds to the \code{formative_label}.
}
\examples{
library(tibble)

# Simple pass/fail grading on two stages
scores <- tibble(StageCurrent = c(1, 1, 2, 2),
                 ScorePct = c(45, 82, 40, 99))
fn_apply_grade_bounds(
  data = scores,
  n_grade_bounds_per_stage = 1,
  grade_bounds = c(50, 60),
  grade_bounds_type = "Percentage Score",
  configured_stages = c(1, 2),
  max_raw_score = 100,
  grade_labels = c("Fail", "Pass"),
  grade_bound_suffixes = c("FP"),
  grading_method_name = "FP"
)

# Formative stage example (bounds all Formative)
scores2 <- tibble(StageCurrent = factor(c(1, 2, 2), ordered = TRUE), ScorePct = c(10, 40, 90))
fn_apply_grade_bounds(
  data = scores2,
  n_grade_bounds_per_stage = 2,
  grade_bounds = c("Formative", "Formative", 35, 85),
  grade_bounds_type = "Percentage Score",
  configured_stages = c(1, 2),
  max_raw_score = 100,
  grade_labels = c("Unsat", "Sat", "Exc"),
  grade_bound_suffixes = c("UB", "SE"),
  grading_method_name = "UBSE"
)

# Raw score grade bounds with multiple grades per stage
scores3 <- tibble(StageCurrent = c(1, 1, 2, 2), ScorePct = c(75, 55, 80, 40))
grade_bounds3 <- c(50, 65, 80, 60, 70, 85)
grade_bound_suffixes3 <- c("Low", "Mid", "High")
grade_labels3 <- c("Fail", "Pass", "Merit", "Distinction")
configured_stages3 <- c(1, 2)
fn_apply_grade_bounds(
  data = scores3,
  n_grade_bounds_per_stage = 3,
  grade_bounds = grade_bounds3,
  grade_bounds_type = "Raw Score",
  configured_stages = configured_stages3,
  max_raw_score = 100,
  grade_labels = grade_labels3,
  grade_bound_suffixes = grade_bound_suffixes3,
  grading_method_name = "Test1"
)
}
